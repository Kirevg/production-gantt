/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç MCP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
 */

const fs = require('fs');
const path = require('path');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MCP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...\n');

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
console.log('üìÅ –¢–µ—Å—Ç —Ñ–∞–π–ª–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:');
try {
    const MCPFileTools = require('./mcp-file-tools');
    const fileTools = new MCPFileTools();

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    const testDir = path.join(__dirname, 'test-dir');
    fileTools.ensureDirectory(testDir);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    const testFile = path.join(testDir, 'test.txt');
    fileTools.safeWriteFile(testFile, '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç', false);
    console.log('‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç');

    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    const content = fileTools.safeReadFile(testFile);
    console.log('‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç');

    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    fs.rmSync(testDir, { recursive: true, force: true });
    console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç');

} catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Ñ–∞–π–ª–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:', error.message);
}

// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Git –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
console.log('\nüîÑ –¢–µ—Å—Ç Git –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:');
try {
    const MCPGitTools = require('./mcp-git-tools');
    const gitTools = new MCPGitTools();

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å Git
    const status = gitTools.getStatus();
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ Git —Ä–∞–±–æ—Ç–∞–µ—Ç');

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
    const branch = gitTools.getCurrentBranch();
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');

} catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ Git –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:', error.message);
}

// –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('\n‚öôÔ∏è –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
try {
    const configPath = path.join(__dirname, 'mcp.json');
    if (fs.existsSync(configPath)) {
        const config = JSON.parse(fs.readFileSync(configPath, 'utf8'));
        console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MCP –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
        console.log(`  –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: ${Object.keys(config.mcpServers || {}).length}`);
    } else {
        console.log('‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MCP –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
} catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error.message);
}

// –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
console.log('\nüìÇ –¢–µ—Å—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:');
const requiredDirs = ['backups', 'logs', 'screenshots', 'memory'];
let createdDirs = 0;

requiredDirs.forEach(dir => {
    const dirPath = path.join(__dirname, dir);
    if (fs.existsSync(dirPath)) {
        console.log(`‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${dir} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        createdDirs++;
    } else {
        console.log(`‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
    }
});

console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`);
console.log(`  –°–æ–∑–¥–∞–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π: ${createdDirs}/${requiredDirs.length}`);

if (createdDirs === requiredDirs.length) {
    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! MCP –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
} else {
    console.log('\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.');
}

console.log('\nüîß –î–ª—è –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
console.log('  1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MCP —Å–µ—Ä–≤–µ—Ä—ã: npm install -g @modelcontextprotocol/server-*');
console.log('  2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Cursor –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è MCP');
console.log('  3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor');

