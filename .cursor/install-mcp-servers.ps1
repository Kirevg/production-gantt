# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP-—Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π AI –∞–≥–µ–Ω—Ç–∞
# –ó–∞–ø—É—Å–∫: .\install-mcp-servers.ps1

Write-Host "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP-—Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è AI –∞–≥–µ–Ω—Ç–∞..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Node.js
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js –Ω–∞–π–¥–µ–Ω: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js —Å https://nodejs.org/" -ForegroundColor Red
    exit 1
}

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
$mcpDir = "C:\Projects\production-gantt\.cursor\mcp-servers"
if (!(Test-Path $mcpDir)) {
    New-Item -ItemType Directory -Path $mcpDir -Force
    Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è MCP —Å–µ—Ä–≤–µ—Ä–æ–≤: $mcpDir" -ForegroundColor Green
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MCP —Å–µ—Ä–≤–µ—Ä—ã
Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤..." -ForegroundColor Yellow

$servers = @(
    "@modelcontextprotocol/server-filesystem",
    "@modelcontextprotocol/server-postgres", 
    "@modelcontextprotocol/server-browser",
    "@modelcontextprotocol/server-memory",
    "@modelcontextprotocol/server-git",
    "@modelcontextprotocol/server-brave-search",
    "@modelcontextprotocol/server-fetch",
    "@modelcontextprotocol/server-sqlite",
    "@modelcontextprotocol/server-puppeteer"
)

foreach ($server in $servers) {
    Write-Host "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $server..." -ForegroundColor Cyan
    try {
        npm install -g $server
        Write-Host "‚úÖ $server —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $server" -ForegroundColor Yellow
    }
}

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è Cursor
$cursorConfig = @'
{
  "mcpServers": {
    "filesystem": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-filesystem", "C:\\Projects\\production-gantt"],
      "env": {
        "ALLOWED_DIRECTORIES": "C:\\Projects\\production-gantt"
      }
    },
    "database": {
      "command": "npx", 
      "args": ["@modelcontextprotocol/server-postgres", "--connection-string", "postgresql://username:password@localhost:5432/production_gantt"],
      "env": {
        "DATABASE_URL": "postgresql://username:password@localhost:5432/production_gantt"
      }
    },
    "browser": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-browser"],
      "env": {
        "HEADLESS": "false",
        "BROWSER_TIMEOUT": "30000"
      }
    },
    "memory": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-memory"],
      "env": {
        "MEMORY_DIR": "C:\\Projects\\production-gantt\\.cursor\\memory"
      }
    },
    "git": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-git", "--repository", "C:\\Projects\\production-gantt"],
      "env": {
        "GIT_REPOSITORY": "C:\\Projects\\production-gantt"
      }
    }
  }
}
'@

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
$configPath = "C:\Projects\production-gantt\.cursor\mcp.json"
$cursorConfig | Out-File -FilePath $configPath -Encoding UTF8
Write-Host "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MCP —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: $configPath" -ForegroundColor Green

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã
$directories = @(
    "C:\Projects\production-gantt\.cursor\memory",
    "C:\Projects\production-gantt\.cursor\backups", 
    "C:\Projects\production-gantt\.cursor\logs",
    "C:\Projects\production-gantt\.cursor\screenshots"
)

foreach ($dir in $directories) {
    if (!(Test-Path $dir)) {
        New-Item -ItemType Directory -Path $dir -Force
        Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $dir" -ForegroundColor Green
    }
}

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
$checkScript = @"
# –ü—Ä–æ–≤–µ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤..." -ForegroundColor Yellow

$servers = @(
    "@modelcontextprotocol/server-filesystem",
    "@modelcontextprotocol/server-browser", 
    "@modelcontextprotocol/server-memory",
    "@modelcontextprotocol/server-git"
)

foreach (`$server in `$servers) {
    try {
        npx `$server --version
        Write-Host "‚úÖ `$server —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå `$server –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Red
    }
}
"@

$checkScript | Out-File -FilePath "C:\Projects\production-gantt\.cursor\check-mcp.ps1" -Encoding UTF8

Write-Host "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ –§–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫, —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ)" -ForegroundColor White
Write-Host "  ‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (SQL –∑–∞–ø—Ä–æ—Å—ã, –º–∏–≥—Ä–∞—Ü–∏–∏, –±—ç–∫–∞–ø—ã)" -ForegroundColor White  
Write-Host "  ‚Ä¢ –ë—Ä–∞—É–∑–µ—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Å–∫—Ä–∏–Ω—à–æ—Ç—ã, –∞–≤—Ç–æ—Ç–µ—Å—Ç—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞)" -ForegroundColor White
Write-Host "  ‚Ä¢ Git –æ–ø–µ—Ä–∞—Ü–∏–∏ (–∫–æ–º–º–∏—Ç—ã, –≤–µ—Ç–∫–∏, —Å–ª–∏—è–Ω–∏—è)" -ForegroundColor White
Write-Host "  ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –¥–∏–∞–≥—Ä–∞–º–º" -ForegroundColor White
Write-Host "  ‚Ä¢ –ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –∏ —Ä–∞–±–æ—Ç–∞ —Å API" -ForegroundColor White

Write-Host "`nüîß –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:" -ForegroundColor Yellow
Write-Host "  .\check-mcp.ps1" -ForegroundColor White

Write-Host "`n‚ö†Ô∏è –í–ê–ñ–ù–û: –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Cursor –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è MCP —Å–µ—Ä–≤–µ—Ä–æ–≤!" -ForegroundColor Red
