import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.tsx'

// ============= –£–î–ê–õ–Å–ù–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–°–û–õ–ò =============
// –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –ª–æ–≥–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
const API_BASE_URL = import.meta.env.VITE_API_BASE_URL || 'http://localhost:4000';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
const sendLogToServer = (level: 'log' | 'info' | 'warn' | 'error', args: any[]) => {
  try {
    const message = args.map(arg => {
      if (typeof arg === 'object') {
        try {
          return JSON.stringify(arg, null, 2);
        } catch {
          return String(arg);
        }
      }
      return String(arg);
    }).join(' ');

    const logData = {
      level,
      message,
      timestamp: new Date().toISOString(),
      url: window.location.href,
      stack: level === 'error' && args[0] instanceof Error ? args[0].stack : undefined
    };

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º navigator.sendBeacon –¥–ª—è –Ω–∞–¥—ë–∂–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    // –î–∞–∂–µ –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è, –ª–æ–≥ –≤—Å—ë —Ä–∞–≤–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è
    const blob = new Blob([JSON.stringify(logData)], { type: 'application/json' });
    navigator.sendBeacon(`${API_BASE_URL}/api/client-logs`, blob);
  } catch (err) {
    // –¢–∏—Ö–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ü–∏–∫–ª
  }
};

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∫–æ–Ω—Å–æ–ª–∏
const originalConsole = {
  log: console.log,
  info: console.info,
  warn: console.warn,
  error: console.error
};

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º console.log
console.log = function (...args: any[]) {
  originalConsole.log.apply(console, args);
  sendLogToServer('log', args);
};

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º console.info
console.info = function (...args: any[]) {
  originalConsole.info.apply(console, args);
  sendLogToServer('info', args);
};

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º console.warn
console.warn = function (...args: any[]) {
  originalConsole.warn.apply(console, args);
  sendLogToServer('warn', args);
};

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º console.error
console.error = function (...args: any[]) {
  originalConsole.error.apply(console, args);
  sendLogToServer('error', args);
};

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏
window.addEventListener('error', (event) => {
  sendLogToServer('error', [
    `Uncaught Error: ${event.message}`,
    `at ${event.filename}:${event.lineno}:${event.colno}`,
    event.error
  ]);
});

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ Promise rejection
window.addEventListener('unhandledrejection', (event) => {
  sendLogToServer('error', [
    `Unhandled Promise Rejection: ${event.reason}`,
    event.reason
  ]);
});

console.log('üîç –£–¥–∞–ª—ë–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–æ–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ');
// ============= –ö–û–ù–ï–¶ –£–î–ê–õ–Å–ù–ù–û–ì–û –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø =============

// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ aria-hidden –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º —Å —Ñ–æ–∫—É—Å–æ–º
// –≠—Ç–æ –Ω–∞—Ä—É—à–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã ARIA —Å–æ–≥–ª–∞—Å–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ WAI-ARIA
const rootElement = document.getElementById('root');
if (rootElement) {
  let lastWarningTime = 0;
  const WARNING_COOLDOWN = 10000; // 10 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏
  
  // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ aria-hidden –Ω–∞ –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
  const originalSetAttribute = rootElement.setAttribute;
  rootElement.setAttribute = function(name: string, value: string) {
    if (name === 'aria-hidden' && value === 'true' && this.id === 'root') {
      // –ë–ª–æ–∫–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É aria-hidden –Ω–∞ –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
      const now = Date.now();
      if (now - lastWarningTime > WARNING_COOLDOWN) {
        console.warn('Blocked aria-hidden on root element to comply with ARIA standards');
        lastWarningTime = now;
      }
      return; // –ù–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç
    }
    return originalSetAttribute.call(this, name, value);
  };
  
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.type === 'attributes' && mutation.attributeName === 'aria-hidden') {
        const target = mutation.target as HTMLElement;
        
        // –£–¥–∞–ª—è–µ–º aria-hidden —Å –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –≤—Å–µ –∂–µ –ø—Ä–æ—Å–∫–æ—á–∏–ª)
        if (target.id === 'root' && target.getAttribute('aria-hidden') === 'true') {
          target.removeAttribute('aria-hidden');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–Ω—É—Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å aria-hidden —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        if (target.getAttribute('aria-hidden') === 'true') {
          const focusedElement = document.activeElement;
          if (focusedElement && target.contains(focusedElement)) {
            // –£–¥–∞–ª—è–µ–º aria-hidden –µ—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç —Å —Ñ–æ–∫—É—Å–æ–º
            target.removeAttribute('aria-hidden');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–µ —á–∞—â–µ —á–µ–º —Ä–∞–∑ –≤ 10 —Å–µ–∫—É–Ω–¥
            const now = Date.now();
            if (now - lastWarningTime > WARNING_COOLDOWN) {
              console.warn(`Removed aria-hidden from ${target.className} because it contains focused element`);
              lastWarningTime = now;
            }
          }
        }
      }
    });
  });

  observer.observe(rootElement, {
    attributes: true,
    attributeFilter: ['aria-hidden'],
    subtree: true // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ –≤—Å–µ—Ö –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö
  });
}

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>,
)
