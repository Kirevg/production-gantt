import React, { useState, useEffect } from 'react';
import { Box, Typography, Paper, IconButton, Tooltip } from '@mui/material';
import { ZoomIn, ZoomOut, Refresh } from '@mui/icons-material';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∑–∞–¥–∞—á Gantt-–¥–∏–∞–≥—Ä–∞–º–º—ã
interface GanttTask {
    id: string;
    name: string;
    start: Date;
    end: Date;
    progress: number;
    dependencies?: string[];
    assignee?: string;
    workType?: string;
    sum?: string;
    hours?: string;
    projectId?: string;
    projectName?: string;
    productId?: string;
    productName?: string;
    projectStatus?: string;
}


interface GanttChartProps {
    // –ü–æ–∫–∞ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
}

const GanttChart: React.FC<GanttChartProps> = () => {
    const [ganttTasks, setGanttTasks] = useState<GanttTask[]>([]);
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<string>('');

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Gantt-–¥–∏–∞–≥—Ä–∞–º–º—ã
    const fetchGanttData = async () => {
        try {
            setLoading(true);
            setError('');

            const token = localStorage.getItem('token');
            console.log('üîë –¢–æ–∫–µ–Ω –∏–∑ localStorage:', token ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω');
            console.log('üåê API URL:', `${import.meta.env.VITE_API_BASE_URL}/projects/gantt`);

            if (!token) {
                setError('–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
                return;
            }

            const response = await fetch(`${import.meta.env.VITE_API_BASE_URL}/projects/gantt`, {
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });

            console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.status, response.statusText);

            if (!response.ok) {
                const errorText = await response.text();
                console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞:', errorText);
                throw new Error(`HTTP error! status: ${response.status} - ${errorText}`);
            }

            const data = await response.json();
            console.log('üìä –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ Gantt:', data);

            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è React Gantt Chart
            const tasks: GanttTask[] = data.map((stage: any) => {
                const startDate = new Date(stage.start);
                const endDate = new Date(stage.end);

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–∞—Ç
                if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {
                    console.warn('‚ö†Ô∏è –ù–µ–≤–∞–ª–∏–¥–Ω–∞—è –¥–∞—Ç–∞ –¥–ª—è —ç—Ç–∞–ø–∞:', stage);
                    return null;
                }

                return {
                    id: stage.id,
                    name: `${stage.projectName || '–ü—Ä–æ–µ–∫—Ç'} - ${stage.productName || '–ò–∑–¥–µ–ª–∏–µ'} - ${stage.name || '–≠—Ç–∞–ø'}`,
                    start: startDate,
                    end: endDate,
                    progress: Math.min(Math.max(stage.progress || 0, 0), 100), // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å 0-100
                    assignee: stage.assignee || '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω',
                    workType: stage.workType || '–ù–µ —É–∫–∞–∑–∞–Ω',
                    sum: stage.sum || '0',
                    hours: stage.hours || '0',
                    projectId: stage.projectId,
                    projectName: stage.projectName || '–ü—Ä–æ–µ–∫—Ç',
                    productId: stage.productId,
                    productName: stage.productName || '–ò–∑–¥–µ–ª–∏–µ',
                    projectStatus: stage.projectStatus
                };
            }).filter(Boolean); // –£–±–∏—Ä–∞–µ–º null –∑–Ω–∞—á–µ–Ω–∏—è

            console.log('üéØ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:', tasks);
            console.log('üîç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á:', tasks.length);

            if (tasks.length > 0) {
                console.log('üîç –ü–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞:', tasks[0]);
                console.log('üîç –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:', tasks.map(t => ({
                    id: typeof t.id,
                    name: typeof t.name,
                    start: typeof t.start,
                    end: typeof t.end,
                    progress: typeof t.progress
                })));
            }

            setGanttTasks(tasks);
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö Gantt:', err);
            setError(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
        } finally {
            setLoading(false);
        }
    };

    // –î–∞–Ω–Ω—ã–µ –¥–ª—è React Gantt Chart —É–∂–µ –≥–æ—Ç–æ–≤—ã –≤ ganttTasks

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    useEffect(() => {
        fetchGanttData();
    }, []);



    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∏)
    const handleZoomIn = () => {
        console.log('–£–≤–µ–ª–∏—á–∏—Ç—å –º–∞—Å—à—Ç–∞–±');
    };

    const handleZoomOut = () => {
        console.log('–£–º–µ–Ω—å—à–∏—Ç—å –º–∞—Å—à—Ç–∞–±');
    };

    const handleRefresh = () => {
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
        fetchGanttData();
    };

    return (
        <Box sx={{ width: '100%', height: '600px' }}>
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
            <Box sx={{
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center',
                mb: 2,
                p: 2,
                backgroundColor: '#f5f5f5',
                borderRadius: 1
            }}>
                <Typography variant="h6" sx={{ fontWeight: 'bold', color: '#424242' }}>
                    Gantt-–¥–∏–∞–≥—Ä–∞–º–º–∞ –ø—Ä–æ–µ–∫—Ç–∞
                </Typography>

                <Box sx={{ display: 'flex', gap: 1 }}>
                    <Tooltip title="–£–≤–µ–ª–∏—á–∏—Ç—å –º–∞—Å—à—Ç–∞–±">
                        <IconButton onClick={handleZoomIn} size="small">
                            <ZoomIn />
                        </IconButton>
                    </Tooltip>

                    <Tooltip title="–£–º–µ–Ω—å—à–∏—Ç—å –º–∞—Å—à—Ç–∞–±">
                        <IconButton onClick={handleZoomOut} size="small">
                            <ZoomOut />
                        </IconButton>
                    </Tooltip>

                    <Tooltip title="–û–±–Ω–æ–≤–∏—Ç—å">
                        <IconButton onClick={handleRefresh} size="small">
                            <Refresh />
                        </IconButton>
                    </Tooltip>
                </Box>
            </Box>

            {/* Gantt-–¥–∏–∞–≥—Ä–∞–º–º–∞ */}
            <Paper sx={{ height: 'calc(100% - 80px)', overflow: 'auto' }}>
                {loading ? (
                    <Box sx={{
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                        height: '100%',
                        flexDirection: 'column',
                        gap: 2
                    }}>
                        <Typography variant="h6" color="text.secondary">
                            –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...
                        </Typography>
                        <Typography variant="body2" color="text.secondary">
                            –ü–æ–ª—É—á–∞–µ–º —ç—Ç–∞–ø—ã —Ä–∞–±–æ—Ç –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
                        </Typography>
                    </Box>
                ) : error ? (
                    <Box sx={{
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                        height: '100%',
                        flexDirection: 'column',
                        gap: 2
                    }}>
                        <Typography variant="h6" color="error">
                            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
                        </Typography>
                        <Typography variant="body2" color="text.secondary">
                            {error}
                        </Typography>
                    </Box>
                ) : ganttTasks.length > 0 ? (
                    <Box sx={{
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                        height: '100%',
                        flexDirection: 'column',
                        gap: 2,
                        p: 4
                    }}>
                        <Typography variant="h5" color="text.primary">
                            üìä Gantt-–¥–∏–∞–≥—Ä–∞–º–º–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
                        </Typography>
                        <Typography variant="body1" color="text.secondary" sx={{ mb: 2 }}>
                            –ù–∞–π–¥–µ–Ω–æ —ç—Ç–∞–ø–æ–≤ —Ä–∞–±–æ—Ç: <strong>{ganttTasks.length}</strong>
                        </Typography>
                        <Typography variant="body2" color="text.secondary" align="center" sx={{ maxWidth: '600px' }}>
                            –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç Gantt-–¥–∏–∞–≥—Ä–∞–º–º–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
                            –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–∞–ø–æ–≤ —Ä–∞–±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∫–ª–∞–¥–∫—É <strong>–ö–∞–Ω–±–∞–Ω</strong>.
                        </Typography>
                    </Box>
                ) : (
                    <Box sx={{
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                        height: '100%',
                        flexDirection: 'column',
                        gap: 2
                    }}>
                        <Typography variant="h6" color="text.secondary">
                            –ù–µ—Ç —ç—Ç–∞–ø–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                        </Typography>
                        <Typography variant="body2" color="text.secondary">
                            –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∞–ø—ã —Ä–∞–±–æ—Ç, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å Gantt-–¥–∏–∞–≥—Ä–∞–º–º—É
                        </Typography>
                    </Box>
                )}
            </Paper>
        </Box>
    );
};

export default GanttChart;

